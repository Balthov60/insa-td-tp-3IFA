#include <stdio.h>
#include <stdlib.h>
#include <stdint.h>
#include <time.h>
#include <string.h>
#include <assert.h>
#include <random>
#include <iomanip>
#include <iostream>

using namespace std;

void affichage(int64_t * tab)
{
    int64_t val = tab[0];
    int lineReturn = 0;
    
    while (val != 0)
    {
        val = tab[val];
        cout << setw(8) << val;

        lineReturn++;
        if (lineReturn == 8)
        {
            lineReturn = 0;
            cout << endl;
        }
    }
    cout << endl;
}

int main()
{
    int64_t N = 1000;
    int64_t R = 100000;
    int64_t * tab = (int64_t *) malloc(N * sizeof(int64_t));
    assert(tab != NULL);
    
    for (int i = 0; i < N; i++)
    {
        tab[i] = i;
    }
    
    printf("Tableau de taille N=%lld créé !\n", N);
    
    srand(time(NULL));
    int i = N;
    while(i > 1)
    {
        i -= 1;
        int j = rand() % i;
        
        int64_t temp = tab[i];
        tab[i] = tab[j];
        tab[j] = temp;
    }

    printf("Tableau de taille N=%lld mélangé !\n", N);
    
    int64_t totalTime = 0;
    int octet = 1;
    
    for (int i = 0; i < R; i++)
    {
        octet = 1;
        int64_t val = tab[0];
        
        int64_t startTime = clock();
        while (val != 0)
        {
            val = tab[val];
            octet++;
        }
        int64_t endTime = clock();
        
        totalTime += endTime - startTime;
    }
    
    printf("Tableau de taille N=%lld parcouru R=%lld fois !\n", N, R);
    printf("Nombre d'octets : %lu \n", octet * sizeof(int64_t));
    printf("Durée en microS : %Lf \n", ((long double)totalTime) / R);

    
    return 0;
}
